(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("react-dom"));
	else if(typeof define === 'function' && define.amd)
		define(["react", "react-dom"], factory);
	else if(typeof exports === 'object')
		exports["ReactAccordionWithHeader"] = factory(require("react"), require("react-dom"));
	else
		root["ReactAccordionWithHeader"] = factory(root["react"], root["react-dom"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_7__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.AccordionNode = exports.AccordionPanel = exports.AccordionHeader = exports.AccordionWithHeader = undefined;

	var _AccordionWithHeader2 = __webpack_require__(1);

	var _AccordionWithHeader3 = _interopRequireDefault(_AccordionWithHeader2);

	var _AccordionHeader2 = __webpack_require__(4);

	var _AccordionHeader3 = _interopRequireDefault(_AccordionHeader2);

	var _AccordionPanel2 = __webpack_require__(6);

	var _AccordionPanel3 = _interopRequireDefault(_AccordionPanel2);

	var _AccordionNode2 = __webpack_require__(8);

	var _AccordionNode3 = _interopRequireDefault(_AccordionNode2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.AccordionWithHeader = _AccordionWithHeader3.default;
	exports.AccordionHeader = _AccordionHeader3.default;
	exports.AccordionPanel = _AccordionPanel3.default;
	exports.AccordionNode = _AccordionNode3.default;

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(3);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable no-lonely-if, no-nested-ternary */


	var defaultProps = {
	  multipleOkay: false,
	  firstOpen: false
	};

	var AccordionWithHeader = function (_Component) {
	  _inherits(AccordionWithHeader, _Component);

	  function AccordionWithHeader(props) {
	    _classCallCheck(this, AccordionWithHeader);

	    var _this = _possibleConstructorReturn(this, (AccordionWithHeader.__proto__ || Object.getPrototypeOf(AccordionWithHeader)).call(this, props));

	    _this.renderChildren = _this.renderChildren.bind(_this);
	    _this.panelControl = _this.panelControl.bind(_this);
	    _this.mountingProps = _this.mountingProps.bind(_this);

	    _this.state = {
	      panels: [],
	      active: []
	    };
	    return _this;
	  }

	  _createClass(AccordionWithHeader, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var panels = [];
	      _react.Children.forEach(this.props.children, function (child) {
	        panels.push(+child.key);
	      });
	      this.setState({ panels: panels });
	      this.mountingProps(this.props);
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      //this is only for the demo. TODO - think of a better way
	      this.mountingProps(nextProps);
	    }
	  }, {
	    key: 'mountingProps',
	    value: function mountingProps(props) {
	      var active = [];
	      if (props.firstOpen) active.push(0);
	      this.setState({ active: active });
	    }
	  }, {
	    key: 'panelControl',
	    value: function panelControl(panelIndex) {

	      var activePanelArray = void 0;
	      var panelData = void 0;

	      if (this.state.active.indexOf(panelIndex) !== -1) {
	        activePanelArray = this.state.active.filter(function (item) {
	          return item !== panelIndex;
	        });
	      } else {
	        activePanelArray = !this.props.multipleOkay ? [] : this.state.active;
	        activePanelArray.push(this.state.panels[panelIndex]);
	      }

	      this.setState({ active: activePanelArray });

	      if (this.props.actionCallback) {
	        // pass array of panels back to actionCallback props function
	        panelData = this.state.panels.map(function (panel) {
	          return {
	            panel: panel,
	            open: activePanelArray.includes(panel)
	          };
	        });
	        this.props.actionCallback(panelData);
	      }
	    }
	  }, {
	    key: 'renderChildren',
	    value: function renderChildren() {
	      var _this2 = this;

	      if (!this.props.children) {
	        throw new Error('AccordionWithHeader must have children!');
	      }

	      /***************************************************************
	       lets render the <AccordionNode /> and its kids
	       ***************************************************************/
	      return _react.Children.map(this.props.children, function (item, index) {
	        return (0, _react.cloneElement)(item, {
	          active: _this2.state.active,
	          indexKey: index,
	          key: index,
	          onSelect: _this2.panelControl.bind(_this2, index)
	        });
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          className = _props.className,
	          style = _props.style;

	      return _react2.default.createElement(
	        'div',
	        {
	          className: (0, _classnames2.default)(className),
	          style: _extends({}, style) },
	        this.renderChildren()
	      );
	    }
	  }]);

	  return AccordionWithHeader;
	}(_react.Component);

	exports.default = AccordionWithHeader;


	AccordionWithHeader.propTypes = {
	  firstOpen: _react.PropTypes.bool,
	  multipleOkay: _react.PropTypes.bool,
	  actionCallback: _react.PropTypes.func
	};
	AccordionWithHeader.defaultProps = defaultProps;

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */

	(function () {
		'use strict';

		var hasOwn = {}.hasOwnProperty;

		function classNames () {
			var classes = [];

			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;

				var argType = typeof arg;

				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}

			return classes.join(' ');
		}

		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(3);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _utils = __webpack_require__(5);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var defaultStyle = {
	  padding: 10
	};

	var AccordionHeader = function (_Component) {
	  _inherits(AccordionHeader, _Component);

	  function AccordionHeader(props) {
	    _classCallCheck(this, AccordionHeader);

	    var _this = _possibleConstructorReturn(this, (AccordionHeader.__proto__ || Object.getPrototypeOf(AccordionHeader)).call(this, props));

	    _this.renderChildren = _this.renderChildren.bind(_this);
	    _this.handleHeaderClick = _this.handleHeaderClick.bind(_this);
	    return _this;
	  }

	  _createClass(AccordionHeader, [{
	    key: 'handleHeaderClick',
	    value: function handleHeaderClick(index) {
	      this.props.onClickHeader(index);
	      //handled in props.onClickHeader() of AccordionNode > props.onSelect() of AccordionWithHeader
	    }
	  }, {
	    key: 'renderChildren',
	    value: function renderChildren() {
	      if (this.props.title) {
	        return _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(
	            'h1',
	            null,
	            this.props.title
	          )
	        );
	      }
	      if (!this.props.template && !this.props.children && !this.props.title) {
	        throw new Error('AccordionHeader must have a title or template or at least one child!');
	      }
	      if (this.props.template) {
	        return this.props.template;
	      }
	      return this.props.children;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _styles;

	      var _props = this.props,
	          style = _props.style,
	          titleColor = _props.titleColor,
	          verticalAlignment = _props.verticalAlignment,
	          horizontalAlignment = _props.horizontalAlignment,
	          className = _props.className,
	          isExpanded = _props.isExpanded;


	      var styles = (_styles = {
	        cursor: 'pointer',
	        color: titleColor || 'black',
	        display: '-webkit-flex'
	      }, _defineProperty(_styles, 'display', 'flex'), _defineProperty(_styles, 'flexDirection', 'row'), _defineProperty(_styles, 'alignItems', (0, _utils.getVerticalAlignment)(verticalAlignment)), _defineProperty(_styles, 'justifyContent', (0, _utils.getHorizontalAlignment)(horizontalAlignment)), _styles);

	      return _react2.default.createElement(
	        'div',
	        { className: (0, _classnames2.default)(className, { 'is-expanded': isExpanded }),
	          onClick: this.handleHeaderClick,
	          style: _extends({}, defaultStyle, styles, style) },
	        this.renderChildren()
	      );
	    }
	  }]);

	  return AccordionHeader;
	}(_react.Component);

	exports.default = AccordionHeader;


	AccordionHeader.propTypes = {
	  className: _react.PropTypes.string,
	  verticalAlignment: _react.PropTypes.oneOf(['top', 'center', 'bottom']),
	  horizontalAlignment: _react.PropTypes.oneOf(['centerSpaceBetween', 'centerSpaceAround', 'center', 'left', 'right']),
	  title: _react.PropTypes.string,
	  titleColor: _react.PropTypes.string,
	  template: _react.PropTypes.element
	};
	AccordionHeader.defaultProps = {
	  horizontalAlignment: 'centerSpaceAround',
	  verticalAlignment: 'center',
	  titleColor: 'black'
	};

/***/ },
/* 5 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var getHorizontalAlignment = exports.getHorizontalAlignment = function getHorizontalAlignment(str) {
	  var align = {
	    'left': 'flex-start',
	    'right': 'flex-end',
	    'center': 'center',
	    'centerSpaceAround': 'space-around',
	    'centerSpaceBetween': 'space-between',
	    'default': 'flex-start'
	  };
	  return align[str] || align['default'];
	};

	var getVerticalAlignment = exports.getVerticalAlignment = function getVerticalAlignment(str) {
	  var align = {
	    'bottom': 'flex-end',
	    'top': 'flex-start',
	    'center': 'center',
	    'default': 'center'
	  };
	  return align[str] || align['default'];
	};

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(7);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _classnames = __webpack_require__(3);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var defaultProps = {
	  speed: 250
	};

	var defaultStyle = {
	  overflow: 'hidden',
	  padding: 0
	};

	var AccordionPanel = function (_Component) {
	  _inherits(AccordionPanel, _Component);

	  function AccordionPanel(props) {
	    _classCallCheck(this, AccordionPanel);

	    var _this = _possibleConstructorReturn(this, (AccordionPanel.__proto__ || Object.getPrototypeOf(AccordionPanel)).call(this, props));

	    _this.renderChildren = _this.renderChildren.bind(_this);
	    _this.preloadImages = _this.preloadImages.bind(_this);
	    _this.calcHeight = _this.calcHeight.bind(_this);

	    _this.state = {
	      originalHeight: 0
	    };
	    return _this;
	  }

	  _createClass(AccordionPanel, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var bodyNode = _reactDom2.default.findDOMNode(this.refs.accordionPanel);
	      var images = bodyNode.querySelectorAll('img');

	      if (images.length > 0) {
	        this.preloadImages(bodyNode, images);
	      } else {
	        this.calcHeight();
	      }
	    }

	    // Wait for images to load before calculating height of element

	  }, {
	    key: 'preloadImages',
	    value: function preloadImages(node) {
	      var _this2 = this;

	      var images = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

	      var imagesLoaded = 0;
	      var imgLoaded = function imgLoaded() {
	        imagesLoaded++;
	        if (imagesLoaded === images.length) _this2.calcHeight();
	      };

	      for (var i = 0; i < images.length; i += 1) {
	        //recurse over images
	        var img = new Image();
	        img.src = images[i].src;
	        img.onload = img.onerror = imgLoaded;
	      }
	    }
	  }, {
	    key: 'calcHeight',
	    value: function calcHeight() {
	      var _this3 = this;

	      if (this.props.template) {
	        var clientHeight = this.refs['item-' + this.props.indexKey].clientHeight;

	        this.setState({
	          originalHeight: clientHeight
	        });
	        return;
	      }

	      var totalHeight = _react.Children.map(this.props.children, function (child) {
	        return _this3.refs['item-' + child.props.key];
	      }).reduce(function (previousValue, child) {
	        return previousValue + child.clientHeight;
	      }, this.state.originalHeight);

	      this.setState({
	        originalHeight: totalHeight
	      });
	    }
	  }, {
	    key: 'renderChildren',
	    value: function renderChildren() {
	      if (!this.props.template && !this.props.children) {
	        throw new Error('AccordionPanel must have at least one child!');
	      }

	      /***************************************************************
	       create a ref so we calculate its height on componentDidMount()
	       this way we know how high to expand the panel
	       ***************************************************************/

	      if (this.props.template) {
	        /* templates are special in that we cannot iterate over them with React.Children.map */
	        return (0, _react.cloneElement)(this.props.template, {
	          ref: 'item-' + this.props.indexKey
	        });
	      }

	      return _react.Children.map(this.props.children, function (child) {
	        return (0, _react.cloneElement)(child, {
	          ref: 'item-' + child.props.key
	        });
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          className = _props.className,
	          isExpanded = _props.isExpanded,
	          style = _props.style;


	      var styles = {
	        transition: 'all ' + (this.props.speed || defaultProps.speed) + 'ms ease-in-out',
	        maxHeight: this.props.isExpanded ? this.state.originalHeight : 0,
	        opacity: this.props.isExpanded ? 1 : 0
	      };

	      return _react2.default.createElement(
	        'div',
	        { ref: 'accordionPanel',
	          className: (0, _classnames2.default)(className, { 'is-expanded': isExpanded }),
	          style: _extends({}, defaultStyle, styles, style) },
	        this.renderChildren()
	      );
	    }
	  }]);

	  return AccordionPanel;
	}(_react.Component);

	exports.default = AccordionPanel;


	AccordionPanel.propTypes = {
	  className: _react.PropTypes.string,
	  speed: _react.PropTypes.number
	};
	AccordionPanel.defaultProps = defaultProps;

/***/ },
/* 7 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_7__;

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(3);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable quotes */


	var AccordionNode = function (_Component) {
	  _inherits(AccordionNode, _Component);

	  function AccordionNode(props) {
	    _classCallCheck(this, AccordionNode);

	    var _this = _possibleConstructorReturn(this, (AccordionNode.__proto__ || Object.getPrototypeOf(AccordionNode)).call(this, props));

	    _this.handleSelect = _this.handleSelect.bind(_this);
	    _this.checkExpanded = _this.checkExpanded.bind(_this);
	    return _this;
	  }

	  _createClass(AccordionNode, [{
	    key: 'handleSelect',
	    value: function handleSelect(key) {
	      if (this.props.onSelect) {
	        this.props.onSelect(key);
	      }
	    }
	  }, {
	    key: 'checkExpanded',
	    value: function checkExpanded(indexKey, activePanelOrPanels) {
	      if (Array.isArray(activePanelOrPanels)) {
	        //multipleOkay is true
	        return activePanelOrPanels.some(function (panel) {
	          return panel === indexKey;
	        });
	      } else {
	        return indexKey === activePanelOrPanels;
	      }
	    }
	  }, {
	    key: 'renderNodeItems',
	    value: function renderNodeItems() {
	      var _this2 = this;

	      var _props = this.props,
	          indexKey = _props.indexKey,
	          active = _props.active,
	          children = _props.children;


	      if (!children) {
	        console.warn('AccordionNode component has no inner items!');
	        return null;
	      }

	      return _react.Children.map(children, function (item) {
	        /***************************************************************
	         lets render the <AccordionHeader /> and <AccordionPanel />
	         ***************************************************************/
	        return (0, _react.cloneElement)(item, _extends({}, item.props, {
	          onClickHeader: function onClickHeader() {
	            return _this2.handleSelect(indexKey);
	          },
	          isExpanded: _this2.checkExpanded(indexKey, active)
	        }));
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props,
	          className = _props2.className,
	          style = _props2.style;


	      return _react2.default.createElement(
	        'div',
	        { className: (0, _classnames2.default)(className), style: _extends({}, style) },
	        this.renderNodeItems()
	      );
	    }
	  }]);

	  return AccordionNode;
	}(_react.Component);

	exports.default = AccordionNode;


	AccordionNode.propTypes = {
	  className: _react.PropTypes.string
	};

/***/ }
/******/ ])
});
;